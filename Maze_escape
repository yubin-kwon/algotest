from collections import deque

n,m=map(int,input().split())

graph=[]
for i in range(n):
    graph.append(list(map(int,input())))

#이동 방향 정의(상하좌우)
    dx=[-1,1,0,0]
    dy=[0,0,-1,1]

#BFS
def BFS(x,y):
    #Queue 구현
    queue=deque()
    queue.append((x,y))

    #큐가 빌때까지 반복
    while queue:
        x,y =queue.popleft()

        #현재 위치에서 상하좌우 확인해 보기
        for i in range(4):
            nx=x+dx[i]
            ny=y+dy[i]
            #미로 공간 벗어난 경우 무시
            if nx<0 or nx>=n or ny<0 or ny>=m:
                continue

            #벽인 경우 무시
            if graph[nx][ny]==0:
                continue
            #해당 노드를 처음 방문한 경우, 경로 기록
            if graph[nx][ny]==1:
                graph[nx][ny]==graph[x][y]+1
                queue.append((nx,ny))


    #가장 오른쪽바닥까지 최단거리 반환
    return graph[n-1][m-1]

print(BFS(0,0))
