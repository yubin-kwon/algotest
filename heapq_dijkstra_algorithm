import heapq
import sys

input=sys.stdin.readline
INF=int(1e9)

n,m=map(int, input().split())
start=int(input())

graph=[[] for i in range(n+1)]
for _ in range(m):
    x,y,z=map(int, input().split())
    graph[x].append((y,z))

distance=[INF]*(n+1)

def dijkstra(start):
    q=[]
    heapq.heappush(q,(0,start))

    while q:
        dist, now=heapq.heappop(q)

        if distance[now]<dist:
            continue

        for i in graph[now]:
            cost=dist+i[1]
            if cost<distance[i[0]]:
                distance[i[0]]=cost
                heapq.heappush(q,(cost, i[0]))


dijkstra(start)

for i in range(n+1):
    if distance[i]==INF:
        print("도달 불가한 노드")
    else:
        print(distance[i])
