#N,M을 공백으로 구분하여 입력 받기
n,m=map(int, input().split())

#2차원 리스트의 맵 정보 입력받기
graph=[]
for i in range(n):
    graph.append(list(map(int,input())))

#DFS로 특정 노드를 방문한 뒤에 연결된 모든 노드를 방문한다
def dfs(x,y):
    #주어진 맵 범위를 벗어날 경우 종료
    if x<=-1 or x>=n or y<=-1 or y>= m:
        return False
    #아직 방문하지 않은 노드
    if graph[x][y]==0:
        #해당 노드를 방문처리 한다
        graph[x][y]=1
        #상하좌우 모두 재귀 호출
        dfs(x,y-1)
        dfs(x+1,y)
        dfs(x-1,y)
        dfs(x,y+1)
        return True
    return False

#모든 노드에 대하여 음료수를 채운다
result=0
for i in range(n):
    for j in range(m):
        #현재 위치에서 DFS 수행
        if dfs(i,j)==True:
            result+=1

print(result)
